{"version":3,"sources":["config/routerBaseName.js","recoil/atoms.js","components/IssueCard.js","config/history.js","components/PaginationContainer.js","api/githubApi.js","pages/ListPage.js","pages/IssueDetail.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["ROUTER_BASENAME","loadingState","atom","key","default","pageNumberState","IssueCard","props","setPageNumber","useSetRecoilState","to","number","onClick","pageNumber","className","index","title","createBrowserHistory","PaginationContainer","Button","history","push","getGithubApiSetPage","Pagination","count","Number","allPagesNumber","page","color","onChange","e","n","handleClickPagination","axiosUrlSet","axios","create","baseURL","getGithubApi","path","get","parse","require","withRouter","useState","issuesDisplayed","setIssuesDisplayed","setAllPagesNumber","isLoading","useEffect","searchNumber","window","location","search","replace","a","res","parsed","headers","link","last","setsIssuesDisplayed","data","console","log","alert","fetchGithubApi","isCleanUp","listen","setsPageNumber","issues","error","map","issueDisplayed","i","marked","issue","setIssue","useRecoilValue","pathname","split","slice","setsIssue","body","dangerouslySetInnerHTML","__html","Loading","loading","App","basename","exact","component","IssueDetail","ListPage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e933135.chunk.js","sourcesContent":["export const ROUTER_BASENAME =\n  process.env.NODE_ENV === \"development\" ? \"/\" : \"/github-issue/\";\n","import { atom } from \"recoil\";\n\nexport const loadingState = atom({\n  key: \"loadingState\",\n  default: false,\n});\n\nexport const pageNumberState = atom({\n  key: \"pageNumberState\",\n  default: 1,\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/IssueCard.scss\";\nimport { useSetRecoilState } from \"recoil\";\nimport { pageNumberState } from \"../recoil/atoms\";\n\nconst IssueCard = (props) => {\n  const setPageNumber = useSetRecoilState(pageNumberState);\n\n  const setRecoilSearchNumber = (number) => {\n    setPageNumber(number);\n  };\n\n  return (\n    <Link\n      to={`issues/${props.number}`}\n      onClick={() => setRecoilSearchNumber(props.pageNumber)}\n    >\n      <article className={`issue-card issue-card-${props.index}`}>\n        <h4>{props.title}</h4>\n        <p>{props.number}</p>\n      </article>\n    </Link>\n  );\n};\n\nexport default IssueCard;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { ROUTER_BASENAME } from \"../config/routerBaseName\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../config/history\";\nimport \"./styles/paginationContainer.scss\";\n\nconst PaginationContainer = (props) => {\n  const toFirstPage = () => {\n    history.push(`${ROUTER_BASENAME}issues?page=1`);\n    props.getGithubApiSetPage(1);\n  };\n  const toLastPage = () => {\n    history.push(`${ROUTER_BASENAME}issues?page=${props.allPagesNumber}`);\n    props.getGithubApiSetPage(props.allPagesNumber);\n  };\n  const handleClickPagination = (e, n) => {\n    history.push(`${ROUTER_BASENAME}issues?page=${n}`);\n    props.getGithubApiSetPage(n);\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      <Button onClick={() => toFirstPage()}>最初</Button>\n      <Pagination\n        count={Number(props.allPagesNumber)}\n        page={props.pageNumber}\n        color=\"primary\"\n        onChange={(e, n) => handleClickPagination(e, n)}\n      />\n      <Button onClick={() => toLastPage()}>最後</Button>\n    </div>\n  );\n};\n\nexport default PaginationContainer;\n","import axios from \"axios\";\nconst baseURL = \"https://api.github.com\";\nconst axiosUrlSet = axios.create({ baseURL });\n\nexport const getGithubApi = (path) => {\n  return axiosUrlSet.get(path);\n};\n","import React, { useState, useEffect } from \"react\";\nimport IssueCard from \"../components/IssueCard\";\nimport PaginationContainer from \"../components/PaginationContainer\";\nimport history from \"../config/history\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport { getGithubApi } from \"../api/githubApi\";\nimport \"./styles/Listpage.scss\";\nconst parse = require(\"parse-link-header\");\n\nconst ListPage = () => {\n  const [issuesDisplayed, setIssuesDisplayed] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [allPagesNumber, setAllPagesNumber] = useState(0);\n  const isLoading = useSetRecoilState(loadingState);\n\n  useEffect(() => {\n    const searchNumber = window.location.search.replace(\"?page=\", \"\");\n    isLoading(true);\n    async function fetchGithubApi() {\n      const res = await getGithubApi(\n        `/repos/facebook/react/issues?page=${searchNumber}&per_page=10`\n      );\n      try {\n        const parsed = parse(res.headers.link);\n        if (parsed.last) {\n          setsIssuesDisplayed(res.data, parsed.last.page);\n        } else {\n          // 最後のページの場合 parsed.last.page が取得できないので window.location.search から取得\n          setsIssuesDisplayed(\n            res.data,\n            window.location.search.replace(\"?page=\", \"\")\n          );\n        }\n        isLoading(false);\n      } catch (e) {\n        console.log(e);\n        alert(\"データが取得できませんでした。\");\n      } finally {\n        isLoading(false);\n      }\n    }\n    fetchGithubApi();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let isCleanUp = false;\n    history.listen((location) => {\n      if (!isCleanUp) {\n        setsPageNumber(location.search, issuesDisplayed);\n      }\n    });\n    const cleanup = () => {\n      isCleanUp = true;\n    };\n    return cleanup;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [issuesDisplayed]);\n\n  const setsIssuesDisplayed = (issues, page) => {\n    setAllPagesNumber(page);\n    setIssuesDisplayed(issues);\n    setsPageNumber(window.location.search, issues);\n  };\n  const setsPageNumber = (search) => {\n    const page = Number(search.replace(\"?page=\", \"\"));\n    setPageNumber(page);\n  };\n  const getGithubApiSetPage = async (page) => {\n    isLoading(true);\n    const res = await getGithubApi(\n      `/repos/facebook/react/issues?page=${page}&per_page=10`\n    );\n    try {\n      const parsed = parse(res.headers.link);\n      if (parsed.last) {\n        setsIssuesDisplayed(res.data, parsed.last.page);\n      } else {\n        // 最後のページの場合 parsed.last.page が取得できないので window.location.search から取得\n        setsIssuesDisplayed(\n          res.data,\n          window.location.search.replace(\"?page=\", \"\")\n        );\n      }\n    } catch (e) {\n      console.error(e);\n      alert(\"データが取得できませんでした。\");\n    } finally {\n      isLoading(false);\n    }\n  };\n  return (\n    <div className=\"list-page\">\n      <PaginationContainer\n        allPagesNumber={allPagesNumber}\n        pageNumber={pageNumber}\n        getGithubApiSetPage={getGithubApiSetPage}\n      />\n      <div className=\"issue-cards\">\n        <div className=\"issue-card-container\">\n          {issuesDisplayed.map((issueDisplayed, i) => (\n            <div key={issueDisplayed.number} className=\"issue-card-wrapper\">\n              <IssueCard\n                number={issueDisplayed.number}\n                title={issueDisplayed.title}\n                index={i}\n                pageNumber={pageNumber}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default withRouter(ListPage);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { Link } from \"react-router-dom\";\nimport { loadingState, pageNumberState } from \"../recoil/atoms\";\nimport { getGithubApi } from \"../api/githubApi\";\nimport \"./styles/IssueDetail.scss\";\nconst marked = require(\"marked\");\n\nconst IssueCard = () => {\n  const [issue, setIssue] = useState({});\n  const isLoading = useSetRecoilState(loadingState);\n  const pageNumber = useRecoilValue(pageNumberState);\n\n  useEffect(() => {\n    isLoading(true);\n    async function fetchGithubApi() {\n      const res = await getGithubApi(\n        `/repos/facebook/react/issues/${\n          window.location.pathname.split(\"/\").slice(-1)[0]\n        }`\n      );\n      try {\n        setsIssue(res.data);\n      } catch (e) {\n        console.error(e);\n        alert(\"データが取得できませんでした。\");\n      } finally {\n        isLoading(false);\n      }\n    }\n    fetchGithubApi();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const setsIssue = (data) => {\n    setIssue(data);\n  };\n  const MarkdownToHtml = (body) => {\n    if (body) {\n      return marked(body);\n    } else {\n      return \"\";\n    }\n  };\n  return (\n    <div className=\"issue-detail\">\n      <Link to={`/issues?page=${pageNumber}`}>issue一覧に戻る</Link>\n      <article className=\"issue-info\">\n        <p>{issue.number}</p>\n        <h1>{issue.title}</h1>\n        <section\n          dangerouslySetInnerHTML={{ __html: MarkdownToHtml(issue.body) }}\n        />\n      </article>\n    </div>\n  );\n};\n\nexport default withRouter(IssueCard);\n","import React, { Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport \"./styles/Loading.scss\";\n\nconst Loading = () => {\n  const loading = useRecoilValue(loadingState);\n\n  return (\n    <Fragment>\n      {(() => {\n        if (loading) {\n          return (\n            <div className=\"mask\">\n              <i className=\"loader\">Loading...</i>\n            </div>\n          );\n        }\n      })()}\n    </Fragment>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ROUTER_BASENAME } from \"./config/routerBaseName\";\nimport ListPage from \"./pages/ListPage\";\nimport IssueDetail from \"./pages/IssueDetail\";\nimport Loading from \"./components/Loading\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={ROUTER_BASENAME}>\n          <RecoilRoot>\n            <Switch>\n              <Route exact path=\"/issues/:number\" component={IssueDetail} />\n              <Route exact path=\"/issues\" component={ListPage} />\n              <Redirect to=\"/issues?page=1\" />\n            </Switch>\n            <Loading />\n          </RecoilRoot>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}