{"version":3,"sources":["components/IssueCard.js","config/history.js","components/PaginationContainer.js","recoil/atoms.js","api/githubApi.js","pages/ListPage.js","pages/IssueDetail.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["IssueCard","props","to","number","className","index","title","createBrowserHistory","PaginationContainer","Button","onClick","history","push","Pagination","count","Math","floor","allIssues","length","page","pageNumber","color","onChange","e","n","handleClickPagination","loadingState","atom","key","default","getGithubApi","path","callback","isLoading","axios","create","baseURL","get","then","res","data","catch","console","error","withRouter","useState","setAllIssues","issuesDisplayed","setIssuesDisplayed","setPageNumber","useSetRecoilState","useEffect","setsAllIssues","isCleanUp","listen","location","setsPageNumber","search","issues","window","tmpNumber","Number","replace","tmpArr","i","displayListPathMatched","map","issueDisplayed","issue","setIssue","pathname","split","slice","setsIssue","body","Loading","loading","useRecoilValue","App","basename","exact","component","IssueDetail","ListPage","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51358a9a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/IssueCard.scss\";\n\nconst IssueCard = (props) => {\n  return (\n    <Link to={`issues/${props.number}`}>\n      <article className={\"issue-card\" + \" \" + \"issue-card-\" + props.index}>\n        <h4>{props.title}</h4>\n        <p>{props.number}</p>\n      </article>\n    </Link>\n  );\n};\n\nexport default IssueCard;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../config/history\";\nimport \"./styles/paginationContainer.scss\";\n\nconst PaginationContainer = (props) => {\n  const toFirstPage = () => {\n    history.push(\"/issues?page=1\");\n  };\n  const toLastPage = () => {\n    history.push(`/issues?page=${Math.floor(props.allIssues.length / 10)}`);\n  };\n  const handleClickPagination = (e, n) => {\n    history.push(`/issues?page=${n}`);\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      <Button onClick={() => toFirstPage()}>最初</Button>\n      <Pagination\n        count={Math.floor(props.allIssues.length / 10)}\n        page={props.pageNumber}\n        color=\"primary\"\n        onChange={(e, n) => handleClickPagination(e, n)}\n      />\n      <Button onClick={() => toLastPage()}>最後</Button>\n    </div>\n  );\n};\n\nexport default PaginationContainer;\n","import { atom } from \"recoil\";\n\nexport const loadingState = atom({\n  key: \"loadingState\",\n  default: false,\n});\n","import axios from \"axios\";\n\nconst getGithubApi = (path, callback, isLoading) => {\n  isLoading(true);\n  axios\n    .create({\n      baseURL: \"https://api.github.com\",\n    })\n    .get(path)\n    .then((res) => {\n      callback(res.data);\n      isLoading(false);\n    })\n    .catch((e) => {\n      console.error(e);\n      isLoading(false);\n    });\n};\n\nexport default getGithubApi;\n","import React, { useState, useEffect } from \"react\";\nimport IssueCard from \"../components/IssueCard\";\nimport PaginationContainer from \"../components/PaginationContainer\";\nimport history from \"../config/history\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport getGithubApi from \"../api/githubApi\";\nimport \"./styles/Listpage.scss\";\n\nconst ListPage = () => {\n  const [allIssues, setAllIssues] = useState([]);\n  const [issuesDisplayed, setIssuesDisplayed] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const isLoading = useSetRecoilState(loadingState);\n\n  useEffect(() => {\n    getGithubApi(\"/repos/facebook/react/issues\", setsAllIssues, isLoading);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let isCleanUp = false;\n    history.listen((location) => {\n      if (!isCleanUp) {\n        setsPageNumber(location.search, allIssues);\n      }\n    });\n    const cleanup = () => {\n      isCleanUp = true;\n    };\n    return cleanup;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allIssues]);\n\n  const setsAllIssues = (issues) => {\n    setAllIssues(issues);\n    setsPageNumber(window.location.search, issues);\n  };\n  const displayListPathMatched = (n, issues) => {\n    setIssuesDisplayed([]);\n    const tmpArr = [];\n    for (let i = (n - 1) * 10; i < n * 10; i++) {\n      if (issues[i]) {\n        tmpArr.push(issues[i]);\n      }\n    }\n    setIssuesDisplayed(tmpArr);\n  };\n  const setsPageNumber = (search, issues) => {\n    const tmpNumber = Number(search.replace(\"?page=\", \"\"));\n    displayListPathMatched(tmpNumber, issues);\n    setPageNumber(tmpNumber);\n  };\n  return (\n    <div className=\"list-page\">\n      <PaginationContainer allIssues={allIssues} pageNumber={pageNumber} />\n      <div className=\"issue-cards\">\n        <div className=\"issue-card-container\">\n          {issuesDisplayed.map((issueDisplayed, i) => (\n            <div key={issueDisplayed.number} className=\"issue-card-wrapper\">\n              <IssueCard\n                number={issueDisplayed.number}\n                title={issueDisplayed.title}\n                index={i}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default withRouter(ListPage);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport getGithubApi from \"../api/githubApi\";\nimport \"./styles/IssueDetail.scss\";\n\nconst IssueCard = () => {\n  const [issue, setIssue] = useState({});\n  const isLoading = useSetRecoilState(loadingState);\n\n  useEffect(() => {\n    getGithubApi(\n      `/repos/facebook/react/issues/${\n        window.location.pathname.split(\"/\").slice(-1)[0]\n      }`,\n      setsIssue,\n      isLoading\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const setsIssue = (data) => {\n    setIssue(data);\n  };\n  return (\n    <div className=\"issue-detail\">\n      <article className=\"issue-info\">\n        <p>{issue.number}</p>\n        <h1>{issue.title}</h1>\n        <section>{issue.body}</section>\n      </article>\n    </div>\n  );\n};\n\nexport default withRouter(IssueCard);\n","import React, { Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport \"./styles/Loading.scss\";\n\nconst Loading = () => {\n  const loading = useRecoilValue(loadingState);\n\n  return (\n    <Fragment>\n      {(() => {\n        if (loading) {\n          return (\n            <div className=\"mask\">\n              <i className=\"loader\">Loading...</i>\n            </div>\n          );\n        }\n      })()}\n    </Fragment>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport ListPage from \"./pages/ListPage\";\nimport IssueDetail from \"./pages/IssueDetail\";\nimport Loading from \"./components/Loading\";\n\nconst ROUTER_BASENAME =\n  process.env.NODE_ENV === \"development\" ? \"/\" : \"/github-issue\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={ROUTER_BASENAME}>\n          <RecoilRoot>\n            <Switch>\n              <Route exact path=\"/issues/:number\" component={IssueDetail} />\n              <Route exact path=\"/issues\" component={ListPage} />\n              <Redirect to=\"/issues?page=1\" />\n            </Switch>\n            <Loading />\n          </RecoilRoot>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}