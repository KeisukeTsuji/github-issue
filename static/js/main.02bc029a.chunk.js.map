{"version":3,"sources":["config/routerBaseName.js","recoil/atoms.js","components/IssueCard.js","config/history.js","components/PaginationContainer.js","api/githubApi.js","pages/ListPage.js","pages/IssueDetail.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["ROUTER_BASENAME","loadingState","atom","key","default","pageNumberState","IssueCard","props","setPageNumber","useSetRecoilState","to","number","onClick","pageNumber","className","index","title","createBrowserHistory","PaginationContainer","Button","history","push","getGithubApiSetPage","Pagination","count","Number","allPagesNumber","page","color","onChange","e","n","handleClickPagination","parse","require","baseURL","getGithubApiIssuePage","path","callback","isLoading","axios","create","get","then","res","parsed","headers","link","last","data","window","location","search","replace","catch","console","error","withRouter","useState","issuesDisplayed","setIssuesDisplayed","setAllPagesNumber","useEffect","searchNumber","setsIssuesDisplayed","isCleanUp","listen","setsPageNumber","issues","map","issueDisplayed","i","issue","setIssue","useRecoilValue","getGithubApiIssueDetail","pathname","split","slice","setsIssue","body","Loading","loading","App","basename","exact","component","IssueDetail","ListPage","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02bc029a.chunk.js","sourcesContent":["export const ROUTER_BASENAME =\n  process.env.NODE_ENV === \"development\" ? \"/\" : \"/github-issue/\";\n","import { atom } from \"recoil\";\n\nexport const loadingState = atom({\n  key: \"loadingState\",\n  default: false,\n});\n\nexport const pageNumberState = atom({\n  key: \"pageNumberState\",\n  default: 1,\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/IssueCard.scss\";\nimport { useSetRecoilState } from \"recoil\";\nimport { pageNumberState } from \"../recoil/atoms\";\n\nconst IssueCard = (props) => {\n  const setPageNumber = useSetRecoilState(pageNumberState);\n\n  const setRecoilSearchNumber = (number) => {\n    setPageNumber(number);\n  };\n\n  return (\n    <Link\n      to={`issues/${props.number}`}\n      onClick={() => setRecoilSearchNumber(props.pageNumber)}\n    >\n      <article className={`issue-card issue-card-${props.index}`}>\n        <h4>{props.title}</h4>\n        <p>{props.number}</p>\n      </article>\n    </Link>\n  );\n};\n\nexport default IssueCard;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { ROUTER_BASENAME } from \"../config/routerBaseName\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../config/history\";\nimport \"./styles/paginationContainer.scss\";\n\nconst PaginationContainer = (props) => {\n  const toFirstPage = () => {\n    history.push(`${ROUTER_BASENAME}issues?page=1`);\n    props.getGithubApiSetPage(1);\n  };\n  const toLastPage = () => {\n    history.push(`${ROUTER_BASENAME}issues?page=${props.allPagesNumber}`);\n    props.getGithubApiSetPage(props.allPagesNumber);\n  };\n  const handleClickPagination = (e, n) => {\n    history.push(`${ROUTER_BASENAME}issues?page=${n}`);\n    props.getGithubApiSetPage(n);\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      <Button onClick={() => toFirstPage()}>最初</Button>\n      <Pagination\n        count={Number(props.allPagesNumber)}\n        page={props.pageNumber}\n        color=\"primary\"\n        onChange={(e, n) => handleClickPagination(e, n)}\n      />\n      <Button onClick={() => toLastPage()}>最後</Button>\n    </div>\n  );\n};\n\nexport default PaginationContainer;\n","import axios from \"axios\";\nconst parse = require(\"parse-link-header\");\nconst baseURL = \"https://api.github.com\";\n\nexport const getGithubApiIssuePage = (path, callback, isLoading) => {\n  isLoading(true);\n  axios\n    .create({\n      baseURL: baseURL,\n    })\n    .get(path)\n    .then((res) => {\n      const parsed = parse(res.headers.link);\n      if (parsed.last) {\n        callback(res.data, parsed.last.page);\n      } else {\n        // 最後のページの場合 parsed.last.page が取得できないので window.location.search から取得\n        callback(res.data, window.location.search.replace(\"?page=\", \"\"));\n      }\n      isLoading(false);\n    })\n    .catch((e) => {\n      console.error(e);\n      isLoading(false);\n    });\n};\n\nexport const getGithubApiIssueDetail = (path, callback, isLoading) => {\n  isLoading(true);\n  axios\n    .create({\n      baseURL: baseURL,\n    })\n    .get(path)\n    .then((res) => {\n      callback(res.data);\n      isLoading(false);\n    })\n    .catch((e) => {\n      console.error(e);\n      isLoading(false);\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport IssueCard from \"../components/IssueCard\";\nimport PaginationContainer from \"../components/PaginationContainer\";\nimport history from \"../config/history\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport { getGithubApiIssuePage } from \"../api/githubApi\";\nimport \"./styles/Listpage.scss\";\n\nconst ListPage = () => {\n  const [issuesDisplayed, setIssuesDisplayed] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [allPagesNumber, setAllPagesNumber] = useState(0);\n  const isLoading = useSetRecoilState(loadingState);\n\n  useEffect(() => {\n    const searchNumber = window.location.search.replace(\"?page=\", \"\");\n    getGithubApiIssuePage(\n      `/repos/facebook/react/issues?page=${searchNumber}&per_page=10`,\n      setsIssuesDisplayed,\n      isLoading\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let isCleanUp = false;\n    history.listen((location) => {\n      if (!isCleanUp) {\n        setsPageNumber(location.search, issuesDisplayed);\n      }\n    });\n    const cleanup = () => {\n      isCleanUp = true;\n    };\n    return cleanup;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [issuesDisplayed]);\n\n  const setsIssuesDisplayed = (issues, page) => {\n    setAllPagesNumber(page);\n    setIssuesDisplayed(issues);\n    setsPageNumber(window.location.search, issues);\n  };\n  const setsPageNumber = (search) => {\n    const page = Number(search.replace(\"?page=\", \"\"));\n    setPageNumber(page);\n  };\n  const getGithubApiSetPage = (page) => {\n    getGithubApiIssuePage(\n      `/repos/facebook/react/issues?page=${page}&per_page=10`,\n      setsIssuesDisplayed,\n      isLoading\n    );\n  };\n  return (\n    <div className=\"list-page\">\n      <PaginationContainer\n        allPagesNumber={allPagesNumber}\n        pageNumber={pageNumber}\n        getGithubApiSetPage={getGithubApiSetPage}\n      />\n      <div className=\"issue-cards\">\n        <div className=\"issue-card-container\">\n          {issuesDisplayed.map((issueDisplayed, i) => (\n            <div key={issueDisplayed.number} className=\"issue-card-wrapper\">\n              <IssueCard\n                number={issueDisplayed.number}\n                title={issueDisplayed.title}\n                index={i}\n                pageNumber={pageNumber}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default withRouter(ListPage);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { Link } from \"react-router-dom\";\nimport { loadingState, pageNumberState } from \"../recoil/atoms\";\nimport { getGithubApiIssueDetail } from \"../api/githubApi\";\nimport \"./styles/IssueDetail.scss\";\n\nconst IssueCard = () => {\n  const [issue, setIssue] = useState({});\n  const isLoading = useSetRecoilState(loadingState);\n  const pageNumber = useRecoilValue(pageNumberState);\n\n  useEffect(() => {\n    getGithubApiIssueDetail(\n      `/repos/facebook/react/issues/${\n        window.location.pathname.split(\"/\").slice(-1)[0]\n      }`,\n      setsIssue,\n      isLoading\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const setsIssue = (data) => {\n    setIssue(data);\n  };\n  return (\n    <div className=\"issue-detail\">\n      <Link to={`/issues?page=${pageNumber}`}>issue一覧に戻る</Link>\n      <article className=\"issue-info\">\n        <p>{issue.number}</p>\n        <h1>{issue.title}</h1>\n        <section>{issue.body}</section>\n      </article>\n    </div>\n  );\n};\n\nexport default withRouter(IssueCard);\n","import React, { Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport \"./styles/Loading.scss\";\n\nconst Loading = () => {\n  const loading = useRecoilValue(loadingState);\n\n  return (\n    <Fragment>\n      {(() => {\n        if (loading) {\n          return (\n            <div className=\"mask\">\n              <i className=\"loader\">Loading...</i>\n            </div>\n          );\n        }\n      })()}\n    </Fragment>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ROUTER_BASENAME } from \"./config/routerBaseName\";\nimport ListPage from \"./pages/ListPage\";\nimport IssueDetail from \"./pages/IssueDetail\";\nimport Loading from \"./components/Loading\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={ROUTER_BASENAME}>\n          <RecoilRoot>\n            <Switch>\n              <Route exact path=\"/issues/:number\" component={IssueDetail} />\n              <Route exact path=\"/issues\" component={ListPage} />\n              <Redirect to=\"/issues?page=1\" />\n            </Switch>\n            <Loading />\n          </RecoilRoot>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}