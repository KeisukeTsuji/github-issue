{"version":3,"sources":["recoil/atoms.js","components/IssueCard.js","config/routerBaseNameHistory.js","config/history.js","components/PaginationContainer.js","api/githubApi.js","pages/ListPage.js","pages/IssueDetail.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["loadingState","atom","key","default","pageNumberState","IssueCard","props","setPageNumber","useSetRecoilState","to","number","onClick","pageNumber","className","index","title","ROUTER_BASENAME_HISTORY","createBrowserHistory","PaginationContainer","Button","history","push","Pagination","count","Math","floor","allIssues","length","page","color","onChange","e","n","handleClickPagination","getGithubApi","path","callback","isLoading","axios","create","baseURL","get","then","res","data","catch","console","error","withRouter","useState","setAllIssues","issuesDisplayed","setIssuesDisplayed","useEffect","setsAllIssues","isCleanUp","listen","location","setsPageNumber","search","issues","window","tmpNumber","Number","replace","tmpArr","i","displayListPathMatched","map","issueDisplayed","issue","setIssue","useRecoilValue","pathname","split","slice","setsIssue","body","Loading","loading","App","basename","exact","component","IssueDetail","ListPage","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f42f832.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const loadingState = atom({\n  key: \"loadingState\",\n  default: false,\n});\n\nexport const pageNumberState = atom({\n  key: \"pageNumberState\",\n  default: 1,\n});\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/IssueCard.scss\";\nimport { useSetRecoilState } from \"recoil\";\nimport { pageNumberState } from \"../recoil/atoms\";\n\nconst IssueCard = (props) => {\n  const setPageNumber = useSetRecoilState(pageNumberState);\n\n  const setRecoilSearchNumber = (number) => {\n    setPageNumber(number);\n  };\n\n  return (\n    <Link\n      to={`issues/${props.number}`}\n      onClick={() => setRecoilSearchNumber(props.pageNumber)}\n    >\n      <article className={`issue-card issue-card-${props.index}`}>\n        <h4>{props.title}</h4>\n        <p>{props.number}</p>\n      </article>\n    </Link>\n  );\n};\n\nexport default IssueCard;\n","export const ROUTER_BASENAME_HISTORY =\n  process.env.NODE_ENV === \"development\" ? \"\" : \"/github-issue/\";","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { ROUTER_BASENAME_HISTORY } from \"../config/routerBaseNameHistory\"\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Button from \"@material-ui/core/Button\";\nimport history from \"../config/history\";\nimport \"./styles/paginationContainer.scss\";\n\nconst PaginationContainer = (props) => {\n  const toFirstPage = () => {\n    history.push(`${ROUTER_BASENAME_HISTORY}/issues?page=1`);\n  };\n  const toLastPage = () => {\n    history.push(`${ROUTER_BASENAME_HISTORY}/issues?page=${Math.floor(props.allIssues.length / 10)}`);\n  };\n  const handleClickPagination = (e, n) => {\n    history.push(`${ROUTER_BASENAME_HISTORY}/issues?page=${n}`);\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      <Button onClick={() => toFirstPage()}>最初</Button>\n      <Pagination\n        count={Math.floor(props.allIssues.length / 10)}\n        page={props.pageNumber}\n        color=\"primary\"\n        onChange={(e, n) => handleClickPagination(e, n)}\n      />\n      <Button onClick={() => toLastPage()}>最後</Button>\n    </div>\n  );\n};\n\nexport default PaginationContainer;\n","import axios from \"axios\";\n\nconst getGithubApi = (path, callback, isLoading) => {\n  isLoading(true);\n  axios\n    .create({\n      baseURL: \"https://api.github.com\",\n    })\n    .get(path)\n    .then((res) => {\n      callback(res.data);\n      isLoading(false);\n    })\n    .catch((e) => {\n      console.error(e);\n      isLoading(false);\n    });\n};\n\nexport default getGithubApi;\n","import React, { useState, useEffect } from \"react\";\nimport IssueCard from \"../components/IssueCard\";\nimport PaginationContainer from \"../components/PaginationContainer\";\nimport history from \"../config/history\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport getGithubApi from \"../api/githubApi\";\nimport \"./styles/Listpage.scss\";\n\nconst ListPage = () => {\n  const [allIssues, setAllIssues] = useState([]);\n  const [issuesDisplayed, setIssuesDisplayed] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const isLoading = useSetRecoilState(loadingState);\n\n  useEffect(() => {\n    getGithubApi(\"/repos/facebook/react/issues\", setsAllIssues, isLoading);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let isCleanUp = false;\n    history.listen((location) => {\n      if (!isCleanUp) {\n        setsPageNumber(location.search, allIssues);\n      }\n    });\n    const cleanup = () => {\n      isCleanUp = true;\n    };\n    return cleanup;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allIssues]);\n\n  const setsAllIssues = (issues) => {\n    setAllIssues(issues);\n    setsPageNumber(window.location.search, issues);\n  };\n  const displayListPathMatched = (n, issues) => {\n    setIssuesDisplayed([]);\n    const tmpArr = [];\n    for (let i = (n - 1) * 10; i < n * 10; i++) {\n      if (issues[i]) {\n        tmpArr.push(issues[i]);\n      }\n    }\n    setIssuesDisplayed(tmpArr);\n  };\n  const setsPageNumber = (search, issues) => {\n    const tmpNumber = Number(search.replace(\"?page=\", \"\"));\n    displayListPathMatched(tmpNumber, issues);\n    setPageNumber(tmpNumber);\n  };\n  return (\n    <div className=\"list-page\">\n      <PaginationContainer allIssues={allIssues} pageNumber={pageNumber} />\n      <div className=\"issue-cards\">\n        <div className=\"issue-card-container\">\n          {issuesDisplayed.map((issueDisplayed, i) => (\n            <div key={issueDisplayed.number} className=\"issue-card-wrapper\">\n              <IssueCard\n                number={issueDisplayed.number}\n                title={issueDisplayed.title}\n                index={i}\n                pageNumber={pageNumber}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default withRouter(ListPage);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { Link } from \"react-router-dom\";\nimport { loadingState, pageNumberState } from \"../recoil/atoms\";\nimport getGithubApi from \"../api/githubApi\";\nimport \"./styles/IssueDetail.scss\";\n\nconst IssueCard = () => {\n  const [issue, setIssue] = useState({});\n  const isLoading = useSetRecoilState(loadingState);\n  const pageNumber = useRecoilValue(pageNumberState);\n\n  useEffect(() => {\n    getGithubApi(\n      `/repos/facebook/react/issues/${\n        window.location.pathname.split(\"/\").slice(-1)[0]\n      }`,\n      setsIssue,\n      isLoading\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const setsIssue = (data) => {\n    setIssue(data);\n  };\n  return (\n    <div className=\"issue-detail\">\n      <Link to={`/issues?page=${pageNumber}`}>issue一覧に戻る</Link>\n      <article className=\"issue-info\">\n        <p>{issue.number}</p>\n        <h1>{issue.title}</h1>\n        <section>{issue.body}</section>\n      </article>\n    </div>\n  );\n};\n\nexport default withRouter(IssueCard);\n","import React, { Fragment } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loadingState } from \"../recoil/atoms\";\nimport \"./styles/Loading.scss\";\n\nconst Loading = () => {\n  const loading = useRecoilValue(loadingState);\n\n  return (\n    <Fragment>\n      {(() => {\n        if (loading) {\n          return (\n            <div className=\"mask\">\n              <i className=\"loader\">Loading...</i>\n            </div>\n          );\n        }\n      })()}\n    </Fragment>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport ListPage from \"./pages/ListPage\";\nimport IssueDetail from \"./pages/IssueDetail\";\nimport Loading from \"./components/Loading\";\n\nconst ROUTER_BASENAME =\n  process.env.NODE_ENV === \"development\" ? \"/\" : \"/github-issue\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={ROUTER_BASENAME}>\n          <RecoilRoot>\n            <Switch>\n              <Route exact path=\"/issues/:number\" component={IssueDetail} />\n              <Route exact path=\"/issues\" component={ListPage} />\n              <Redirect to=\"/issues?page=1\" />\n            </Switch>\n            <Loading />\n          </RecoilRoot>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}